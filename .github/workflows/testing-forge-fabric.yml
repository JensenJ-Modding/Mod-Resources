name: Testing

on:
  workflow_call:
    inputs:
        gradle-version:
            required: true
            type: string
        java-version:
            required: true
            type: number
        fabric-mods:
            required: true
            type: string
        forge-mods:
            required: true
            type: string

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ inputs.java-version }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ inputs.gradle-version }}
          cache-read-only: false

      - name: Spotless Check
        run: gradle spotlessCheck

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ inputs.java-version }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ inputs.gradle-version }}
          cache-read-only: false

      - name: Build
        run: gradle build -x spotlessJava -x spotlessJavaCheck -x spotlessCheck -PbuildNumber=${{ github.run_number }}

      - name: Setup environment variables
        run: |
          echo "MOD_VERSION=$(grep '^mod_version' gradle.properties | awk -F '=' '{gsub(/ /, "", $2); print $2}')" >> "$GITHUB_ENV"
          echo "MINECRAFT_VERSION=$(grep '^minecraft_version' gradle.properties | awk -F '=' '{gsub(/ /, "", $2); print $2}')" >> "$GITHUB_ENV"
          echo "ARCHIVES_NAME=$(grep '^archives_name' gradle.properties | awk -F '=' '{gsub(/ /, "", $2); print $2}')" >> "$GITHUB_ENV"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts - ${{ env.ARCHIVES_NAME }}-${{ env.MINECRAFT_VERSION }}-${{ env.MOD_VERSION }}+${{ github.run_number }}
          retention-days: 1
          path: |
            common/build/libs/
            fabric/build/libs/
            forge/build/libs/

  launch-client:
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        loader: [forge, fabric]
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup environment variables
        run: |
          echo "MOD_VERSION=$(grep '^mod_version' gradle.properties | awk -F '=' '{gsub(/ /, "", $2); print $2}')" >> "$GITHUB_ENV"
          echo "MINECRAFT_VERSION=$(grep '^minecraft_version' gradle.properties | awk -F '=' '{gsub(/ /, "", $2); print $2}')" >> "$GITHUB_ENV"
          echo "FABRIC_API_VERSION=$(grep '^fabric_api_version' gradle.properties | awk -F '=' '{gsub(/ /, "", $2); print $2}')" >> "$GITHUB_ENV"
          echo "ARCHIVES_NAME=$(grep '^archives_name' gradle.properties | awk -F '=' '{gsub(/ /, "", $2); print $2}')" >> "$GITHUB_ENV"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: Artifacts - ${{ env.ARCHIVES_NAME }}-${{ env.MINECRAFT_VERSION }}-${{ env.MOD_VERSION }}+${{ github.run_number }}

      - name: Move artifact to run/mods
        run: |
          mkdir -p run/mods
          cp ${{ matrix.loader }}/build/libs/${{env.ARCHIVES_NAME}}-${{ matrix.loader }}-${{ env.MINECRAFT_VERSION }}-${{ env.MOD_VERSION }}+${{ github.run_number }}.jar run/mods

      - name: Download forge dependencies
        if: matrix.loader == 'forge'
        run: |
          if [ -n "${{ inputs.forge-mods }}" ]; then
            echo "${{ inputs.forge-mods }}" | tr ' ' '\n' | while read -r line; do
              wget "$line" -O run/mods/$(basename "$line")
            done
          fi

      - name: Download fabric dependencies
        if: matrix.loader == 'fabric'
        run: |
          if [ -n "${{ inputs.fabric-mods }}" ]; then
            echo "${{ inputs.fabric-mods }}" | tr ' ' '\n' | while read -r line; do
              wget "$line" -O run/mods/$(basename "$line")
            done
          fi

      # Lock to a specific commit, incase of breaking changes
      - name: Test Client
        uses: 3arthqu4ke/mc-runtime-test@3.1.0
        with:
          mc: ${{ env.MINECRAFT_VERSION }}
          modloader: ${{ matrix.loader }}
          regex: .*${{ matrix.loader }}.*
          #this action expects forge to be lexforge, when migrating to neoforge we can just use matrix.loader directly
          mc-runtime-test: ${{ matrix.loader == 'forge' && 'lexforge' || 'fabric' }}
          java: ${{ inputs.java-version }}
          fabric-api: ${{ matrix.loader == 'fabric' && env.FABRIC_API_VERSION || 'none' }}
